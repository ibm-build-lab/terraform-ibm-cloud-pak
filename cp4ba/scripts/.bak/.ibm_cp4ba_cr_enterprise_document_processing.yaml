
###############################################################################
##
##Licensed Materials - Property of IBM
##
##(C) Copyright IBM Corp. 2021. All Rights Reserved.
##
##US Government Users Restricted Rights - Use, duplication or
##disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
##
###############################################################################
apiVersion: icp4a.ibm.com/v1
kind: ICP4ACluster
metadata:
  name: icp4badeploy
  labels:
    app.kubernetes.io/instance: ibm-dba
    app.kubernetes.io/managed-by: ibm-dba
    app.kubernetes.io/name: ibm-dba
    release: 21.0.1
spec:
  ##########################################################################
  ## This section contains the shared configuration for all CP4A components #
  ##########################################################################
  appVersion: 21.0.1

  ## MUST exist, used to accept ibm license, valid value only can be "accept"
  ibm_license: ""

  shared_configuration:

    ## FileNet Content Manager (FNCM) license and possible values are: user, non-production, and production.
    ## This value could be different from the rest of the licenses.
    sc_deployment_fncm_license: "<Required>"

    ## All CP4A components must use/share the image_pull_secrets to pull images.
    image_pull_secrets:
    - admin.registrykey

    ## All CP4A components must use/share the same docker image repository.  For example, if IBM Entitled Registry is used, then
    ## it should be "cp.icr.io".  Otherwise, it will be a local docker registry.
    sc_image_repository: cp.icr.io

    ## All CP4A components must use/share the root_ca_secret in order for integration.
    root_ca_secret: icp4ba-root-ca

    ## CP4A patterns or capabilities to be deployed.  This CR represents the "document_processing" pattern (aka IBM Autoation Document Processing),
    ## which includes the following required/mandatory components:
    ##   - Development env:
    ##     - cds, cdra, cpds, viewone, Common Git Gateway (git-service and mongodb), cpe, navigator-sso, graphql;
    ##     - backend, redis, rabbitmq;
    ##     - extraction (callerapi, pdfprocess, utf8process, ocr-extraction);
    ##     - processing (postprocessing, setup, classifyprocess-classify, processing-extraction, updatefiledetail);
    ##     - natural_language_extractor; deep learning;
    ##     - ums;
    ##     - bastudio, jms, solution-server-helmjob-db, solution-server, dba-etcd;
    ##   - Runtime env:
    ##     - cpds, viewone, cpe, navigator-sso, graphql;
    ##     - backend, redis, rabbitmq;
    ##     - extraction (callerapi, pdfprocess, utf8process, ocr-extraction);
    ##     - processing (postprocessing, setup, classifyprocess-classify, processing-extraction, updatefiledetail);
    ##     - natural_language_extractor;
    ##     - ums;
    ##     - solution-server-helmjob-db, solution-server, dba-etcd;
    sc_deployment_patterns: document_processing

    ## The optional components to be installed if listed here.  This is normally populated by the User script based on input from the user.
    ## The optional components are:
    ##   - document_processing_designer (indicates the deployment is a development environment)
    ##   - document_processing_runtime (indicates the deployment is a runtime environment)
    ##   - cmis, css, and es
    ##   - ae_data_persistence (Business Automation Application Data Persistence)
    sc_optional_components: ae_data_persistence

    ## The deployment type as selected by the user.  Possible values are: demo, enterprise.
    sc_deployment_type: enterprise

    ## For "document_processing" (ADP), you have the option to select CPE "full storage" or "limited storage" (free).
    ## By default, ADP is deployed with CPE "full storage" (sc_cpe_limited_storage: false).  Set sc_cpe_limited_storage 
    ## to "true" if you want to use CPE "limited storage" license
    sc_cpe_limited_storage: false

    ## Specify the RunAsUser for the security context of the pod.  This is usually a numeric value that corresponds to a user ID.
    sc_run_as_user:

    ## For ROKS, this is used to enable the creation of ingresses. The default value is "false", which routes will be created.
    sc_ingress_enable: false

    ## The platform to be deployed specified by the user.  Possible values are: OCP and other.  This is normally populated by the User script
    ## based on input from the user.
    sc_deployment_platform:

    ## For OCP, this is used to create route, you should input a valid hostname in the required field.
    sc_deployment_hostname_suffix: "{{ meta.namespace }}.<Required>"

    ## For ROKS, this is used to enable the creation of ingresses. The default value is "false", which routes will be created.
    sc_ingress_enable: false

    
    ## If the root certificate authority (CA) key of the external service is not signed by the operator root CA key, provide the TLS certificate of
    ## the external service to the component's truststore.
    trusted_certificate_list: []

    ## Shared encryption key secret name that is used for Workflow or Workstream Services and Process Federation Server integration.
    ## This secret is also used by Workflow and BAStudio to store AES encryption key.
    encryption_key_secret: ibm-iaws-shared-key-secret

    ## Enable/disable ECM (FNCM) / BAN initialization (e.g., creation of P8 domain, creation/configuration of object stores,
    ## creation/configuration of CSS servers, and initialization of Navigator (ICN)).  If the "initialize_configuration" section
    ## is defined in the CR, then that configuration will take precedence overriding this parameter.  Note that if you are upgrading or
    ## migrating, set this parameter to "false" since the env has been previously initialized.
    sc_content_initialization: false
    ## OR
    ## If you want to enable the initialize for a specific product for ECM (FNCM) / BAN, you will need to use
    ## these fields instead.  Otherwise, use the default sc_content_initialization: false
    # sc_content_initialization:
    #  cpe: false
    #  css: false
    #  ban: false


    ## Enable/disable the ECM (FNCM) / BAN verification (e.g., creation of test folder, creation of test document,
    ## execution of CBR search, and creation of Navigator demo repository and desktop).  If the "verify_configuration"
    ## section is defined in the CR, then that configuration will take precedence overriding this parameter.  Note that if you are upgrading or
    ## migrating, set this parameter to "false" since the env has been previously verified.
    sc_content_verification: false
    ## OR
    ## If you want to enable the verification for a specific product for ECM (FNCM) / BAN, you will need to use
    ## these fields instead.  Otherwise, use the default sc_content_verification: false
    # sc_content_verification:
    #  cpe: false
    #  css: false
    #  ban: false


    ## On OCP 3.x and 4.x, the User script will populate these three (3) parameters based on your input for "enterprise" deployment.
    ## If you manually deploying without using the User script, then you would provide the different storage classes for the slow, medium
    ## and fast storage parameters below.  If you only have 1 storage class defined, then you can use that 1 storage class for all 3 parameters.
    storage_configuration:
      sc_slow_file_storage_classname: "<Required>"
      sc_medium_file_storage_classname: "<Required>"
      sc_fast_file_storage_classname: "<Required>"


  ## The beginning section of LDAP configuration for CP4A
  ldap_configuration:
    ## The possible values are: "IBM Security Directory Server" or "Microsoft Active Directory"
    lc_selected_ldap_type: "<Required>"

    ## The name of the LDAP server to connect
    lc_ldap_server: "<Required>"

    ## The port of the LDAP server to connect.  Some possible values are: 389, 636, etc.
    lc_ldap_port: "<Required>"

    ## The LDAP bind secret for LDAP authentication.  The secret is expected to have ldapUsername and ldapPassword keys.  Refer to Knowledge Center for more info.
    lc_bind_secret: ldap-bind-secret

    ## The LDAP base DN.  For example, "dc=example,dc=com", "dc=abc,dc=com", etc
    lc_ldap_base_dn: "<Required>"

    ## Enable SSL/TLS for LDAP communication. Refer to Knowledge Center for more info.
    lc_ldap_ssl_enabled: true

    ## The name of the secret that contains the LDAP SSL/TLS certificate.
    lc_ldap_ssl_secret_name: "<Required>"

    ## The LDAP user name attribute.  One possible value is "*:cn" for TDS and "user:sAMAccountName" for AD. Refer to Knowledge Center for more info.
    lc_ldap_user_name_attribute: "<Required>"

    ## The LDAP user display name attribute. One possible value is "cn" for TDS and "sAMAccountName" for AD. Refer to Knowledge Center for more info.
    lc_ldap_user_display_name_attr: "<Required>"

    ## The LDAP group base DN.  For example, "dc=example,dc=com", "dc=abc,dc=com", etc
    lc_ldap_group_base_dn: "<Required>"

    ## The LDAP group name attribute.  One possible value is "*:cn" for TDS and "*:cn" for AD. Refer to Knowledge Center for more info.
    lc_ldap_group_name_attribute: "*:cn"

    ## The LDAP group display name attribute.  One possible value for both TDS and AD is "cn". Refer to Knowledge Center for more info.
    lc_ldap_group_display_name_attr: "cn"

    ## The LDAP group membership search filter string.  One possible value is "(&(cn=%v)(|(objectclass=groupOfNames)(objectclass=groupOfUniqueNames)(objectclass=groupOfURLs)))" for TDS
    ## and "(&(cn=%v)(objectcategory=group))" for AD.
    lc_ldap_group_membership_search_filter: "<Required>"

    ## The LDAP group membership ID map.  One possible value is "groupofnames:member" for TDS and "memberOf:member" for AD.
    lc_ldap_group_member_id_map: "<Required>"

    ## The User script will uncomment the section needed based on user's input from User script.  If you are deploying without the User script,
    ## uncomment the necessary section (depending if you are using Active Directory (ad) or Tivoli Directory Service (tds)) accordingly.
    # ad:
    #   lc_ad_gc_host: "<Required>"
    #   lc_ad_gc_port: "<Required>"
    #   lc_user_filter: "(&(sAMAccountName=%v)(objectcategory=user))"
    #   lc_group_filter: "(&(cn=%v)(objectcategory=group))"
    # tds:
    #   lc_user_filter: "(&(cn=%v)(objectclass=person))"
    #   lc_group_filter: "(&(cn=%v)(|(objectclass=groupofnames)(objectclass=groupofuniquenames)(objectclass=groupofurls)))"

  ## User script should only uncomment this section if External Share if selected as an optional component.
  ## If you are deploying without the User script, uncomment the necessary section (depending
  ## if you are using Active Directory (ad) or Tivoli Directory Service (tds)) accordingly.
  # ext_ldap_configuration:
  #   lc_selected_ldap_type: "<Required>"
  #   lc_ldap_server: "<Required>"
  #   lc_ldap_port: "<Required>"
  #   lc_bind_secret: ldap-bind-secret
  #   lc_ldap_base_dn: "<Required>"
  #   lc_ldap_ssl_enabled: true
  #   lc_ldap_ssl_secret_name: "<Required>"
  #   lc_ldap_user_name_attribute: "<Required>"
  #   lc_ldap_user_display_name_attr: "<Required>"
  #   lc_ldap_group_base_dn: "<Required>"
  #   lc_ldap_group_name_attribute: "<Required>"
  #   lc_ldap_group_display_name_attr: "cn"
  #   lc_ldap_group_membership_search_filter: "<Required>"
  #   lc_ldap_group_member_id_map: "<Required>"

    ## User script will uncomment the section needed based on user's input from User script.
    ## If you are deploying without the User script, uncomment the necessary section (depending
    ## if you are using Active Directory (ad) or Tivoli Directory Service (tds)) accordingly.
    # ad:
    ## This is the Global Catalog port for the LDAP
    #   lc_ad_gc_host: "<Required>"
    #   lc_ad_gc_port: "<Required>"
    #   lc_user_filter: "(&(sAMAccountName=%v)(objectcategory=user))"
    #   lc_group_filter: "(&(cn=%v)(objectcategory=group))"
    # tds:
    #   lc_user_filter: "(&(cn=%v)(objectclass=person))"
    #   lc_group_filter: "(&(cn=%v)(|(objectclass=groupofnames)(objectclass=groupofuniquenames)(objectclass=groupofurls)))"

  ## The beginning section of database configuration for CP4A
  datasource_configuration:
    ## The dc_ssl_enabled parameter is used to support database connection over SSL for DB2/Oracle.
    dc_ssl_enabled: true
    ## The database_precheck parameter is used to enable or disable CPE/Navigator database connection check.
    ## If set to "true", then CPE/Navigator database connection check will be enabled.
    ## if set to "false", then CPE/Navigator database connection check will not be enabled.
   # database_precheck: true
    ## The database configuration for the GCD datasource for CPE
    dc_gcd_datasource:
      ## Provide the database type from your infrastructure.  The possible values are "db2" or "db2HADR" or "oracle".
      dc_database_type: "<Required>"
      ## The GCD non-XA datasource name.  The default value is "FNGCDDS".
      dc_common_gcd_datasource_name: "FNGCDDS"
      ## The GCD XA datasource name. The default value is "FNGCDDSXA".
      dc_common_gcd_xa_datasource_name: "FNGCDDSXA"
      ## Provide the database server name or IP address of the database server.
      database_servername: "<Required>"
      ## Provide the name of the database for the GCD for CPE.  For example: "GCDDB"
      database_name: "<Required>"
      ## Provide the database server port.  For Db2, the default is "50000".  For Oracle, the default is "1521"
      database_port: "<Required>"
      ## The name of the secret that contains the DB2 SSL certificate.
      database_ssl_secret_name: "<Required>"
      ## If the database type is Oracle, provide the Oracle DB connection string.  For example, "jdbc:oracle:thin:@//<oracle_server>:1521/orcl"
      dc_oracle_gcd_jdbc_url: "<Required>"

      ## If the database type is Db2 HADR, then complete the rest of the parameters below.
      ## Provide the database server name or IP address of the standby database server.
      dc_hadr_standby_servername: "<Required>"
      ## Provide the standby database server port.  For Db2, the default is "50000".
      dc_hadr_standby_port: "<Required>"
      ## Provide the validation timeout.  If not preference, keep the default value.
      dc_hadr_validation_timeout: 15
      ## Provide the retry internal.  If not preference, keep the default value.
      dc_hadr_retry_interval_for_client_reroute: 15
      ## Provide the max # of retries.  If not preference, keep the default value.
      dc_hadr_max_retries_for_client_reroute: 3

    dc_os_datasources:
    ## The data source configuration for DEVOS1 object store
    ## Provide the database type from your infrastructure.  The possible values are "db2" or "db2HADR" or "oracle".  This should be the same as the GCD configuration above.
    - dc_database_type: "<Required>"
      ## For the "document_processing" pattern, the following parameters below MUST remain unchanged and have the default value:
      ##   dc_os_label: "devos1"
      ##   dc_common_os_datasource_name: "DEVOS1DS"
      ##   dc_common_os_xa_datasource_name: "DEVOS1DSXA"
      ## When creating the ibm-fncm-secret, the OS secret must be defined as:
      ##   --from-literal=devos1DBUsername="<your os db username>" --from-literal=devos1DBPassword="<your os db password>"
      ## If you have multiple object stores, then you need to define multiple datasource sections starting at "dc_database_type" element after this section.
      ## Each dc_os_label shoudl be different (e.g., dc_os_label: "os1", dc_os_label: "os2", dc_os_label: "os3", etc).
      ## This label must match the OS secret you define in ibm-fncm-secret.
      ## For example, if you define dc_os_label: "os1", then your OS secret must be defined as:
      ## --from-literal=os1DBUsername="<your os db username>" --from-literal=os1DBPassword="<your os db password>"
      ## If you don't define dc_os_label, then your secret will be defined as:
      ## --from-literal=osDBUsername="<your os db username>" --from-literal=osDBPassword="<your os db password>".
      ## If all the object store databases share the same username and password, then dc_os_label value should be the same
      ## in all the datasource sections.
      dc_os_label: "devos1"
      ## The OS1 non-XA datasource name.  The default value is "DEVOS1DS".
      dc_common_os_datasource_name: "DEVOS1DS"
      ## The OS1 XA datasource name.  The default value is "DEVOS1DSXA".
      dc_common_os_xa_datasource_name: "DEVOS1DSXA"
      ## Provide the database server name or IP address of the database server.  This should be the same as the
      ## GCD configuration above.
      database_servername: "<Required>"
      ## Provide the name of the database for the object store 1 for CPE.  For example: "DEVOS1DB"
      database_name: "<Required>"
      ## Provide the database server port.  For Db2, the default is "50000".  For Oracle, the default is "1521"
      database_port: "<Required>"
      ## The name of the secret that contains the DB2 SSL certificate.
      database_ssl_secret_name: "<Required>"
      ## If the database type is Oracle, provide the Oracle DB connection string.  For example, "jdbc:oracle:thin:@//<oracle_server>:1521/orcl"
      dc_oracle_os_jdbc_url: "<Required>"
      ######################################################################################
      ## If the database type is "Db2HADR", then complete the rest of the parameters below.
      ## Otherwise, remove or comment out the rest of the parameters below.
      ######################################################################################
      dc_hadr_standby_servername: "<Required>"
      ## Provide the standby database server port.  For Db2, the default is "50000".
      dc_hadr_standby_port: "<Required>"
      ## Provide the validation timeout.  If not preference, keep the default value.
      dc_hadr_validation_timeout: 15
      ## Provide the retry internal.  If not preference, keep the default value.
      dc_hadr_retry_interval_for_client_reroute: 15
      ## Provide the max # of retries.  If not preference, keep the default value.
      dc_hadr_max_retries_for_client_reroute: 3
    ## The data source configuration for AEOS object store
    - dc_database_type: "<Required>"
      ## For the "document_processing" pattern, the following parameters below MUST remain unchanged and have the default value:
      ##   dc_os_label: "aeos" 
      ##   dc_common_os_datasource_name: "AEOS"
      ##   dc_common_os_xa_datasource_name: "AEOSXA"
      ## When creating the ibm-fncm-secret, the OS secret must be defined as:
      ##   --from-literal=aeosDBUsername="<your os db username>" --from-literal=aeosDBPassword="<your os db password>"
      ## If you have multiple object stores, then you need to define multiple datasource sections starting at "dc_database_type" element after this section.
      ## Each dc_os_label shoudl be different (e.g., dc_os_label: "os1", dc_os_label: "os2", dc_os_label: "os3", etc).
      ## This label must match the OS secret you define in ibm-fncm-secret.
      ## For example, if you define dc_os_label: "os1", then your OS secret must be defined as:
      ## --from-literal=os1DBUsername="<your os db username>" --from-literal=os1DBPassword="<your os db password>"
      ## If you don't define dc_os_label, then your secret will be defined as:
      ## --from-literal=osDBUsername="<your os db username>" --from-literal=osDBPassword="<your os db password>".
      ## If all the object store databases share the same username and password, then dc_os_label value should be the same in all the datasource sections.
      dc_os_label: "aeos"
      ## The OS1 non-XA datasource name.  The default value is "AEOS".
      dc_common_os_datasource_name: "AEOS"
      ## The OS1 XA datasource name.  The default value is "AEOSXA".
      dc_common_os_xa_datasource_name: "AEOSXA"
      ## Provide the database server name or IP address of the database server.  This should be the same as the 
      ## GCD configuration above.
      database_servername: "<Required>"
      ## Provide the name of the database for the object store 1 for CPE.  For example: "OS1DB"
      database_name: "<Required>"
      ## Provide the database server port.  For Db2, the default is "50000".  For Oracle, the default is "1521"
      database_port: "<Required>"
      ## The name of the secret that contains the DB2 SSL certificate.
      database_ssl_secret_name: "<Required>"
      ## If the database type is Oracle, provide the Oracle DB connection string.  For example, "jdbc:oracle:thin:@//<oracle_server>:1521/orcl"
      dc_oracle_os_jdbc_url: "<Required>"
      ######################################################################################
      ## If the database type is "Db2HADR", then complete the rest of the parameters below.
      ## Otherwise, remove or comment out the rest of the parameters below.
      ######################################################################################
      dc_hadr_standby_servername: "<Required>"
      ## Provide the standby database server port.  For Db2, the default is "50000".
      dc_hadr_standby_port: "<Required>"
      ## Provide the validation timeout.  If not preference, keep the default value.
      dc_hadr_validation_timeout: 15
      ## Provide the retry internal.  If not preference, keep the default value.
      dc_hadr_retry_interval_for_client_reroute: 15
      ## Provide the max # of retries.  If not preference, keep the default value.
      dc_hadr_max_retries_for_client_reroute: 3
    ## The database configuration for ICN (Navigator) - aka BAN (Business Automation Navigator)
    dc_icn_datasource:
      ## Provide the database type from your infrastructure.  The possible values are "db2" or "db2HADR" or "oracle".  This should be the same as the
      ## GCD and object store configuration above.
      dc_database_type: "<Required>"
      ## Provide the ICN datasource name.  The default value is "ECMClientDS".
      dc_common_icn_datasource_name: "ECMClientDS"
      database_servername: "<Required>"
      ## Provide the database server port.  For Db2, the default is "50000".  For Oracle, the default is "1521"
      database_port: "<Required>"
      ## Provide the name of the database for ICN (Navigator).  For example: "ICNDB"
      database_name: "<Required>"
      ## The name of the secret that contains the DB2 SSL certificate.
      database_ssl_secret_name: "<Required>"
      ## If the database type is Oracle, provide the Oracle DB connection string.  For example, "jdbc:oracle:thin:@//<oracle_server>:1521/orcl"
      dc_oracle_icn_jdbc_url: "<Required>"
      ######################################################################################
      ## If the database type is "Db2HADR", then complete the rest of the parameters below.
      ## Otherwise, remove or comment out the rest of the parameters below.
      ######################################################################################
      dc_hadr_standby_servername: "<Required>"
      ## Provide the standby database server port.  For Db2, the default is "50000".
      dc_hadr_standby_port: "<Required>"
      ## Provide the validation timeout.  If not preference, keep the default value.
      dc_hadr_validation_timeout: 15
      ## Provide the retry internal.  If not preference, keep the default value.
      dc_hadr_retry_interval_for_client_reroute: 15
      ## Provide the max # of retries.  If not preference, keep the default value.
      dc_hadr_max_retries_for_client_reroute: 3

## The database configuration for ACA (Content Analyzer)
    dc_ca_datasource:
      ## Provide the database type from your infrastructure.  The possible values are "db2" or "db2HADR"
      dc_database_type: "<Required>"
      ## Provide  the hostname of the primary DB2 server in this variable and IF your DB2 hostname is not resolvable by DNS THEN  provide the corresponding IP address for the `database_IP` parameter below when `dc_database_type` is `db2HADR`.
      database_servername: "<Required>"
      ## Provide the name of the BASE database for ACA.  For example: "BASECA"
      database_name: "<Required>"
      ## Provide the names of the TENANT databases for ACA.
      tenant_databases:
        - "<Required>"
      ## Provide the database server port.  For Db2, the default is "50000".
      database_port: "<Required>"
      ## Enable SSL/TLS for database communication. Refer to Knowledge Center for more info.
      dc_database_ssl_enabled: true
      ######################################################################################
      ## If the database type is "Db2HADR", then complete the rest of the parameters below.
      ## Otherwise, remove or comment out the rest of the parameters below.
      ######################################################################################

      ## Provide the standby database server name and if your standby database server name cannot be resolvable by DNS, then provide the corresponding IP address for the `dc_hadr_standby_ip` parameter below.
      dc_hadr_standby_servername: "<Required>"
      ## Provide the standby database server port.  For Db2, the default is "50000".
      dc_hadr_standby_port: "<Required>"
      ## Provide the validation timeout.  If not preference, keep the default value.
      dc_hadr_validation_timeout: 15
      ## Provide the retry internal.  If not preference, keep the default value.
      dc_hadr_retry_interval_for_client_reroute: 15
      ## Provide the max # of retries.  If not preference, keep the default value.
      dc_hadr_max_retries_for_client_reroute: 3
      ## Provide the primary database server IP address if database_servername cannot be resolved by DNS.
      database_ip: "<Required>"
      ## Provide the standby database server IP address if dc_hadr_standby_servername cannot be resolved by DNS.
      dc_hadr_standby_ip: "<Required>"

  ## For a Runtime Document Processing environment uncomment
  ## this section and update the repo_service_url parameter with
  ## your development cdra URL.
  ########################################################################
  ########      IBM FileNet Content Manager configuration         ########
  ########################################################################
  # ecm_configuration:
    #############################################
    ##                                         ##
    ##   IBM Automation Document Processing    ##
    ##                                         ##
    #############################################
  #  document_processing:
       #################################################################
       ## Start of configuration for Content Project Designer Service ##
       #################################################################
  #    cpds:
  #      production_setting:
          ## The repository service (cdra) url.
          ## For a runtime environment update this value to point to your 
          ## development cdra external URL (not service endpoint).
  #        repo_service_url: "<Required>"

  ############################################################################
  ########   IBM Business Automation Content Analyzer configuration   ########
  ############################################################################
  ca_configuration:
    # Deep Learning configuration
    deeplearning:
      gpu_enabled:  # true or false.  Set it to true if you have a GPU enabled worker nodes
      nodelabel_key: # The unique node label key/value on the GPU node. For example: ibm-cloud.kubernetes.io/gpu-enabled:true.  Set this value when `gpu_enabled` is set to true.  This must be a string value
      nodelabel_value:  # The node label value on the GPU node.  For example: "true". Set this value when `gpu_enabled` is set to true.  This must be a string value
  ########################################################################
  ########   IBM User and Group Management Service configuration  ########
  ########################################################################
  ums_configuration:
    teamserver:
      ## Specify an LDAP Admin group (e.g., admingroup: "cn=ADPEnvironmentOwners,dc=example,dc=org" where 
      ## the ADPEnvironmentOwners group will to be the default UMS teamserver administrators as required for 
      ## Automation Document Processing (ADP) capability)
      admingroup: "<Required>"
  
  ########################################################################
  ######## IBM FileNet Content Manager Initialization configuration ######
  ########################################################################
  ## NOTE: Automation Document Processing (ADP) capability is depended on CPE component (part of FNCM).
  ## Please do NOT change the hard-coded values below such as oc_cpe_obj_store_display_name, oc_cpe_obj_store_symb_name, dc_os_datasource_name,
  ## and dc_os_xa_datasource_name.  Please only fill out the parameters that are "<required>"
  initialize_configuration:
    ic_ldap_creation:
      ic_ldap_admins_groups_name:
      - "<Required>" # Specify an LDAP Admin group (CE Environment Owners) as domain admin (required for "document_processing" capability)
    ic_obj_store_creation:
      object_stores:
      - oc_cpe_obj_store_display_name: "DEVOS1"
        oc_cpe_obj_store_symb_name: "DEVOS1"
        oc_cpe_obj_store_conn:
          dc_os_datasource_name: "DEVOS1DS"
          dc_os_xa_datasource_name: "DEVOS1DSXA"
        oc_cpe_obj_store_admin_user_groups:
        - "<Required>" # Specify an LDAP Admin User as object store admin (required for "document_processing" capability)
        - "<Required>" # Specify an LDAP Admin group (CE Environment Owners) as object store admin (required for "document_processing" capability)
      ## Configuration for the application engine object store
      ## Display name for the application engine object store to create
      - oc_cpe_obj_store_display_name: "AEOS"
        ## Symbolic name for the application engine object store to create
        oc_cpe_obj_store_symb_name: "AEOS"
        oc_cpe_obj_store_conn:
          ## Add the name of the object store database
          dc_os_datasource_name: "AEOS"
          ## The XA datasource
          dc_os_xa_datasource_name: "AEOSXA"
    ic_icn_init_info:	
      icn_repos:	
      - add_repo_id: "devos1_repo1"	
        add_repo_ce_wsi_url: "http://{{ meta.name }}-cpe-svc:9080/wsi/FNCEWS40MTOM/"	
        add_repo_os_sym_name: "DEVOS1"	
        add_repo_os_dis_name: "DEVOS1"	
        add_repo_workflow_enable: false	
        add_repo_work_conn_pnt: "pe_conn_devos1:1"	
        add_repo_protocol: "FileNetP8WSI"	
      icn_desktop:	
      - add_desktop_id: "demo"	
        add_desktop_name: "icn_desktop"	
        add_desktop_description: "This is ICN desktop"	
        add_desktop_is_default: false	
        add_desktop_repo_id: "devos1_repo1"
        add_desktop_repo_workflow_enable: false