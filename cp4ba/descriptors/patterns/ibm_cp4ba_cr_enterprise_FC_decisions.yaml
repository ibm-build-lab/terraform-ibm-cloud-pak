
###############################################################################
##
##Licensed Materials - Property of IBM
##
##(C) Copyright IBM Corp. 2021. All Rights Reserved.
##
##US Government Users Restricted Rights - Use, duplication or
##disclosure restricted by GSA ADP Schedule Contract with IBM Corp.
##
###############################################################################
apiVersion: icp4a.ibm.com/v1
kind: ICP4ACluster
metadata:
  name: icp4badeploy
  labels:
    app.kubernetes.io/instance: ibm-dba
    app.kubernetes.io/managed-by: ibm-dba
    app.kubernetes.io/name: ibm-dba
    release: 21.0.1
spec:

  ## MUST exist, used to accept ibm license, valid value only can be "accept"
  ibm_license: ""
  appVersion: 21.0.1.1
  #################################################################################################################
  ##  The contents of this template CR file reflect only the specific parameters and configuration
  ##  settings applicable to the represented ICP4A capability.
  ##
  ##  These values/configuration sections are to be used when manually assembling or updating the main
  ##  ICP4A CR that is being applied in order to install an ICP4A environment.
  ##
  ##  If you are in the process of preparing a new install of an ICP4A environment,
  ##  you should merge the required values and configuration sections from this file into the
  ##  starting point CR template: ibm_cp4ba_cr_enterprise_foundation.yaml available in the
  ##  same location as this template.
  ##
  ##  If you updating an existing ICP4A environment, you should merge the required values and configuration
  ##  sections from this template in the main ICP4A CR file already applied in the environment.
  ##
  ######################################################################################################################

  shared_configuration:

    ## CP4A patterns or capabilities to be deployed. This CR represents Operational Decsision Manage "decisions" pattern
    ## that brings Decision Center, Rule Execution Server and Decision Runtime, based on the user specification in the
    ## sc_optional_components specification
    sc_deployment_patterns: decisions

    ## The optional components to be installed if listed here.
    ## This is normally populated by the deploy script based on input from the user.
    ## User can also manually specify the optional components to be deployed here.
    ## This pattern has has 5: decisionCenter (Business Console), decisionRunner (Testing and Simulation runtime), decisionServerRuntime (Rule Execution Server), bai (Business Automation Insight), ums (User Management Service) optionals components.
    ## If decisionCenter is set, you also have to set the 'odm_configuration.decisionCenter.enabled' flag to true to install it.
    ## If decisionRunner is set, you also have to set the 'odm_configuration.decisionRunner.enabled' flag to true to install it.
    ## If decisionServerRuntime is set, you also have to set the 'odm_configuration.decisionRuntime.enabled' flag to true to install it.
    sc_optional_components:

    ## For ROKS, this is used to enable the creation of ingresses. The default value is "false", which routes will be created.
    sc_ingress_enable: false

    ## For ROKS Ingress, provide TLS secret name for Ingress controller.
    sc_ingress_tls_secret_name: <Required>
    ## The platform to be deployed specified by the user.  Possible values are: OCP, ROKS, and other.  This is normally populated by the User script
    ## based on input from the user.
    sc_deployment_platform:
  ## The beginning section of database configuration for CP4A
  datasource_configuration:
    dc_odm_datasource:
      ## Provide the database type from your infrastructure.
      ## The possible values are "db2" / "postgres" / "sqlserver".
      dc_database_type: "<Required>"
      ## Provide the database server name or IP address of the database server.
      database_servername: "<Required>"
      ## Provide the database server port.  For Db2, the default is "50000".  For Oracle, the default is "1521"
      dc_common_database_port: "<Required>"
      ## Provide the name of the database for ODM.  For example: "ODMDB"
      dc_common_database_name: "<Required>"
      ## The name of the secret that contains the credentials to connect to the database.
      dc_common_database_instance_secret: "<Required>"
      ## Set to true when the database is using SSL
      dc_common_ssl_enabled: true
      ## If SSL is used to secure the database connection, specify the name of the SSL secret.
      dc_ssl_secret_name: "<Required>"

  ########################################################################
  ########     IBM Operational Decision Manager Configuration     ########
  ########################################################################
  odm_configuration:
    # Allow to activate more trace for ODM in the Operator pod.
    debug: false
    # Allow to specify which version of ODM you want to deploy.
    # Supported version > 19.0.2
    # If omitted the latest version will be used.

    image:
      # Specify to override the tag docker images in case of an interim fix.
      tag: 21.0.1
      # Specify the pull policy for the Docker images. See Kuberntes documentation for more inforations.
      # Possible values : IfNotPresent, Always, Never
      pullPolicy: IfNotPresent

    # Specify the Ingress annotations.
    route_ingress_annotations:
    ## Decision Server Runtime parameters
    decisionServerRuntime:
      # Specify whether to enable Decision Server Runtime.
      enabled: true
      # Specify to override the tag or digest for the decision server docker image.
      tagOrDigest:
      # Specify the number of Decision Server Runtime pods.
      # The default value is set to 1. For high availability, use a value of 2 so a backup pod is ready to immediately take over if a failure occurs.
      replicaCount: 1
      # Specify the name of the configMap the wanted logging options. If left empty, default logging options are used.
      loggingRef:
      # Specify the name of the configMap the wanted JVM options. If left empty, default JVM options are used.
      jvmOptionsRef:
      # Specify the name of the configmap that contains the XU configuration property file.
      xuConfigRef:
      # Enable the role mapping extension feature to map an ODM role to one or several groups (basic or LDAP registry) when their names are different.
      extendRoleMapping:
      resources:
        requests:
          # Specify the requested CPU.
          cpu: 500m
          # Specify the requested memory.
          memory: 512Mi
        limits:
          # Specify the CPU limit.
          cpu: 2
          # Specify the memory limit.
          memory: 4096Mi


    ## Decision Server Console parameters
    decisionServerConsole:
      # Specify to override the tag or digest for the decision server console docker image.
      tagOrDigest:
      # Specify the name of the configMap the wanted logging options. If left empty, default logging options are used.
      loggingRef:
      # Specify the name of the configMap the wanted JVM options. If left empty, default JVM options are used.
      jvmOptionsRef:
      # Enable the role mapping extension feature to map an ODM role to one or several groups (basic or LDAP registry) when their names are different.
      extendRoleMapping:
      # Specify the title name for the Decision Server Console web page. If left empty, the default title name is used.
      title:
      # Specify a description for the Decision Server Console. If left empty, the default description is used.
      description:
      resources:
        requests:
          # Specify the requested CPU.
          cpu: 500m
          # Specify the requested memory.
          memory: 512Mi
        limits:
          # Specify the CPU limit.
          cpu: 2
          # Specify the memory limit.
          memory: 1024Mi

    ## Decision Center parameters
    decisionCenter:
      # Specify whether to enable Decision Center.
      enabled: true
      # Specify to override the tag or digest for the decision center docker image.
      tagOrDigest:
      # Specify the persistence locale for Decision Center.
      # Possible values  "ar_EG" (Arabic - Egypt), "zh_CN" (Chinese - China), "zh_TW" (Chinese - Taiwan)
      # "nl_NL" (Netherlands), "en_GB" (English - United Kingdom), "en_US" (English - United States),
      # "fr_FR" (French - France), "de_DE" (German - Germany), "iw_IL" (Hebrew - Israel), "it_IT" (Italian - Italy),
      # "ja_JP" (Japanese - Japan) , "ko_KR" (Korean - Korea), "pl_PL" (Polish - Poland),
      # "pt_BR" (Portuguese - Brazil), "ru_RU" (Russian - Russia), "es_ES" (Spanish - Spain)
      persistenceLocale: en_US
      # Specify the number of Decision Center pods.
      # The default value is set to 1. For high availability, use a value of 2 so a backup pod is ready to immediately take over if a failure occurs.
      replicaCount: 1
      # Persistent Volume Claim to access the custom libraries
      customlibPvc:
      # Specify the name of the configMap the wanted logging options. If left empty, default logging options are used.
      loggingRef:
      # Specify the name of the configMap the wanted JVM options. If left empty, default JVM options are used.
      jvmOptionsRef:
      # Enable the role mapping extension feature to map an ODM role to one or several groups (basic or LDAP registry) when their names are different.
      extendRoleMapping:
      resources:
        requests:
          # Specify the requested CPU.
          cpu: 500m
          # Specify the requested memory.
          memory: 1500Mi
        limits:
          # Specify the CPU limit.
          cpu: 2
          # Specify the memory limit.
          memory: 4096Mi

    ## Decision Runner parameters
    decisionRunner:
      # Specify whether to enable Decision Runner.
      enabled: true
      # Specify to override the tag or digest for the decision runner docker image.
      tagOrDigest:
      # Specify the number of Decision Runner pods. 
      # The default value is set to 1. For high availability, use a value of 2 so a backup pod is ready to immediately take over if a failure occurs.
      replicaCount: 1
      # Specify the name of the configMap the wanted logging options. If left empty, default logging options are used.
      loggingRef:
      # Specify the name of the configMap the wanted JVM options. If left empty, default JVM options are used.
      jvmOptionsRef:
      # Enable the role mapping extension feature to map an ODM role to one or several groups (basic or LDAP registry) when their names are different.
      extendRoleMapping:
      resources:
        requests:
          # Specify the requested CPU.
          cpu: 500m
          # Specify the requested memory.
          memory: 512Mi
        limits:
          # Specify the CPU limit.
          cpu: 2
          # Specify the memory limit.
          memory: 4096Mi

    ## Database - Option 3: External (Oracle)
    ## Fill in the parameters to use an external database configured by a secret.
    externalCustomDatabase:
      # Specify the name of the secret that contains the datasource configuration to use.
      datasourceRef:
      # Persistent Volume Claim to access the JDBC Database Driver
      driverPvc:

    readinessProbe:
      # Specify the number of seconds after the container has started before readiness probe is initiated.
      initialDelaySeconds: 5
      # Specify how often (in seconds) to perform the probe.
      periodSeconds: 5
      # Specify how many times Kubernetes will try before giving up when a pod starts and the probe fails. Giving up means marking the pod as Unready.
      failureThreshold: 90
      # Specify the number of seconds after which the readiness probe times out.
      timeoutSeconds: 5

    livenessProbe:
      # Specify the number of seconds after the container has started before liveness probe is initiated.
      initialDelaySeconds: 400
      # Specify how often (in seconds) to perform the probe.
      periodSeconds: 10
      # Specify how many times Kubernetes will try before giving up when a pod starts and the probe fails. Giving up means restarting the pod.
      failureThreshold: 50
      # Specify the number of seconds after which the liveness probe times out.
      timeoutSeconds: 5

    customization:
      # Specify the label attached to some nodes. Pods are scheduled to the nodes with this label. If the parameter is empty, pods are scheduled randomly.
      authSecretRef:
      # Specify a list of secrets that encapsulate certificates in PEM format to be included in the truststore.
      # This list of certificates is merged with the Cloud Pak certificate list defined by the shared configuration trusted_certificate_list parameter.
      trusted_certificate_list:

    oidc:
      # Specify whether to enable OpenId Authentication.
      enabled: false


